# This is a basic workflow to help you get started with Actions

name: Cypress Tests with installation job

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main]
    pull_request:
        branches: [main]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    setup-node:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            # Setup node
            - name: Setup nodeJS
              uses: actions/setup-node@v2.5.1
              with:
                  node-version: 16
            - name: Cache Node Modules
              id: cache-node-modules
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-npm-cache-
            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci

    setup-database:
        runs-on: ubuntu-latest
        needs: [setup-node]
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Npm install
              run: npm install
            - name: Reset database
              run: npm run prisma:reset
            - name: Migrate database
              run: npm run prisma:init

    cypress-run:
        runs-on: ubuntu-latest
        needs: [setup-database]
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Synchronize database with schema
              run: npx prisma db push
            - name: Cypress run
              uses: cypress-io/github-action@v2
              with:
                  build: npm run build
                  start: npm start
    Jest-test-run:
        runs-on: ubuntu-latest
        needs: [setup-database]
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Install dependencies
              run: npm install
            - name: Jest run
              run: npm run test
    Deploy:
        runs-on: ubuntu-latest
        #needs: [Jest-test-run, cypress-run]
        steps:
            - name: Checkout master
              uses: actions/checkout@main
            - name: Install doctl
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Build and push the Docker image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/assignment-5-e2e-testing:$(echo $GITHUB_SHA | head -c7)

            - name: Update deployment file
              run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|kristofergauti/assignment-5-e2e-testing:'${TAG}'|' $GITHUB_WORKSPACE/template/deployment.yml

            - name: Save DigitalOcean kubeconfig with short-lived credentials
              run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 todo-cluster

            - name: Deploy to DigitalOcean Kubernetes cluster
              run: kubectl apply -f $GITHUB_WORKSPACE/template/deployment.yml

            - name: Verify deployment
              run: kubectl rollout status deployment/todo-app
            - name: Verify load balancer service
              run: kubectl get service
